// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NET.Core.Console.DB.SqlServer;

namespace NET.Core.Console.DB.SqlServer.Migrations
{
    [DbContext(typeof(AppSqlServerDbContext))]
    partial class AppSqlServerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NET.Core.Library.Domain.DBModels.Author", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Address");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LastName");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MiddleName");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("PhoneNumber");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Address = "CA, US",
                            Email = "adam.freeman@test.com",
                            FirstName = "Adam",
                            LastName = "Freeman",
                            MiddleName = "",
                            PhoneNumber = "9999999999"
                        },
                        new
                        {
                            Id = 2L,
                            Address = "London, UK",
                            Email = "venkat.krishnaswamy@test.com",
                            FirstName = "Venkat",
                            LastName = "Krishnaswamy",
                            MiddleName = "",
                            PhoneNumber = "9999999998"
                        },
                        new
                        {
                            Id = 3L,
                            Address = "Perth, AU",
                            Email = "christopher.williams@test.com",
                            FirstName = "Christopher",
                            LastName = "Williams",
                            MiddleName = "",
                            PhoneNumber = "9999999997"
                        },
                        new
                        {
                            Id = 4L,
                            Address = "WA, US",
                            Email = "sam.johanson@test.com",
                            FirstName = "Sam",
                            LastName = "Johanson",
                            MiddleName = "",
                            PhoneNumber = "9999999996"
                        },
                        new
                        {
                            Id = 5L,
                            Address = "Sao Paolo, Brazil",
                            Email = "mithila.frost@test.com",
                            FirstName = "Mithila",
                            LastName = "Frost",
                            MiddleName = "",
                            PhoneNumber = "9999999995"
                        },
                        new
                        {
                            Id = 6L,
                            Address = "KA, IN",
                            Email = "md.zubair@test.com",
                            FirstName = "Muhammed",
                            LastName = "Zubair",
                            MiddleName = "",
                            PhoneNumber = "9999999994"
                        },
                        new
                        {
                            Id = 7L,
                            Address = "Shanghai, CN",
                            Email = "xi.so.pang@test.com",
                            FirstName = "Xi",
                            LastName = "Pang",
                            MiddleName = "So",
                            PhoneNumber = "9999999993"
                        },
                        new
                        {
                            Id = 8L,
                            Address = "Berlin, DE",
                            Email = "elizabeth.mckinsley@test.com",
                            FirstName = "Elizabeth",
                            LastName = "McKinsley",
                            MiddleName = "",
                            PhoneNumber = "9999999992"
                        },
                        new
                        {
                            Id = 9L,
                            Address = "Del, IN",
                            Email = "ajay.kumar.sharma@test.com",
                            FirstName = "Ajay",
                            LastName = "Sharma",
                            MiddleName = "Kumar",
                            PhoneNumber = "9999999991"
                        },
                        new
                        {
                            Id = 10L,
                            Address = "RJ, IN",
                            Email = "punit.singh@test.com",
                            FirstName = "Punit",
                            LastName = "Singh",
                            MiddleName = "",
                            PhoneNumber = "9999999990"
                        },
                        new
                        {
                            Id = 11L,
                            Address = "Lisbon, Portugal",
                            Email = "geroge.fernandez@test.com",
                            FirstName = "George",
                            LastName = "Fernandez",
                            MiddleName = "",
                            PhoneNumber = "9999999909"
                        },
                        new
                        {
                            Id = 12L,
                            Address = "Tel Aviv, Israel",
                            Email = "ben.andrews.forouzan@test.com",
                            FirstName = "Ben",
                            LastName = "Forouzan",
                            MiddleName = "Andrews",
                            PhoneNumber = "9999999908"
                        },
                        new
                        {
                            Id = 13L,
                            Address = "UP, IN",
                            Email = "ravish.upadhay@test.com",
                            FirstName = "Ravish",
                            LastName = "Upadhay",
                            MiddleName = "",
                            PhoneNumber = "9999999907"
                        },
                        new
                        {
                            Id = 14L,
                            Address = "Montreal, Canada",
                            Email = "amir.nizami@test.com",
                            FirstName = "Amir",
                            LastName = "Nizami",
                            MiddleName = "",
                            PhoneNumber = "9999999906"
                        },
                        new
                        {
                            Id = 15L,
                            Address = "PB, IN",
                            Email = "montel.singh.ahluwalia@test.com",
                            FirstName = "Montek",
                            LastName = "Ahluwalia",
                            MiddleName = "Singh",
                            PhoneNumber = "9999999905"
                        });
                });

            modelBuilder.Entity("NET.Core.Library.Domain.DBModels.Book", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int")
                        .HasColumnName("AuthorId");

                    b.Property<long?>("AuthorId1")
                        .HasColumnType("bigint");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)")
                        .HasColumnName("Isbn");

                    b.Property<DateTime>("PublishedOn")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2")
                        .HasColumnName("PublishedOn");

                    b.Property<string>("Summary")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Summary");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId1");

                    b.HasIndex("Isbn")
                        .IsUnique();

                    b.ToTable("Books");
                });

            modelBuilder.Entity("NET.Core.Library.Domain.DBModels.Book", b =>
                {
                    b.HasOne("NET.Core.Library.Domain.DBModels.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId1");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("NET.Core.Library.Domain.DBModels.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
